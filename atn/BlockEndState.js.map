{"version":3,"file":"BlockEndState.js","sourceRoot":"","sources":["../../../src/atn/BlockEndState.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;AAEH,wDAAwD;AAExD,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAA;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAEhD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAA;AAE3C,iDAAiD;AACjD,MAAM,OAAO,aAAc,SAAQ,QAAQ;IAC1C,gDAAgD;IACzC,UAAU,CAAmB;IAGpC,IAAI,SAAS;QACZ,OAAO,YAAY,CAAC,SAAS,CAAC;IAC/B,CAAC;CACD;AAHA;IADC,QAAQ;8CAGR","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:27.9125304-07:00\n\nimport { ATNState } from \"./ATNState.js\"\nimport { ATNStateType } from \"./ATNStateType.js\"\nimport { BlockStartState } from \"./BlockStartState.js\"\nimport { Override } from \"../Decorators.js\"\n\n/** Terminal node of a simple `(a|b|c)` block. */\nexport class BlockEndState extends ATNState {\n\t// This is always set during ATN deserialization\n\tpublic startState!: BlockStartState;\n\n\t@Override\n\tget stateType(): ATNStateType {\n\t\treturn ATNStateType.BLOCK_END;\n\t}\n}\n"]}