{"version":3,"file":"SetTransition.js","sourceRoot":"","sources":["../../../src/atn/SetTransition.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;;;;AAKH,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AACpD,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAA;AAC9D,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAA;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAG5C,+CAA+C;AACxC,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAErC,GAAG,CAAc;IAExB,qDAAqD;IACrD,YAAqB,MAAgB,EAAY,GAAgB;QAChE,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,GAAG,IAAI,IAAI,EAAE;YAChB,GAAG,GAAG,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IAGD,IAAI,iBAAiB;QACpB,kCAA0B;IAC3B,CAAC;IAID,IAAI,KAAK;QACR,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAGM,OAAO,CAAC,MAAc,EAAE,cAAsB,EAAE,cAAsB;QAC5E,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAIM,QAAQ;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC5B,CAAC;CACD,CAAA;AAjCA;IADC,OAAO;0CACgB;AAaxB;IADC,QAAQ;sDAGR;AAID;IAFC,QAAQ;IACR,OAAO;0CAGP;AAGD;IADC,QAAQ;4CAGR;AAID;IAFC,QAAQ;IACR,OAAO;6CAGP;AAlCW,aAAa;IAKZ,WAAA,OAAO,CAAA;IAAoB,WAAA,QAAQ,CAAA;GALpC,aAAa,CAmCzB;SAnCY,aAAa","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:37.3060135-07:00\n\nimport { ATNState } from \"./ATNState.js\"\nimport { IntervalSet } from \"../misc/IntervalSet.js\"\nimport { Override, NotNull, Nullable } from \"../Decorators.js\"\nimport { Token } from \"../Token.js\"\nimport { Transition } from \"./Transition.js\"\nimport { TransitionType } from \"./TransitionType.js\"\n\n/** A transition containing a set of values. */\nexport class SetTransition extends Transition {\n\t@NotNull\n\tpublic set: IntervalSet;\n\n\t// TODO (sam): should we really allow undefined here?\n\tconstructor(@NotNull target: ATNState, @Nullable set: IntervalSet) {\n\t\tsuper(target);\n\t\tif (set == null) {\n\t\t\tset = IntervalSet.of(Token.INVALID_TYPE);\n\t\t}\n\n\t\tthis.set = set;\n\t}\n\n\t@Override\n\tget serializationType(): TransitionType {\n\t\treturn TransitionType.SET;\n\t}\n\n\t@Override\n\t@NotNull\n\tget label(): IntervalSet {\n\t\treturn this.set;\n\t}\n\n\t@Override\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\n\t\treturn this.set.contains(symbol);\n\t}\n\n\t@Override\n\t@NotNull\n\tpublic toString(): string {\n\t\treturn this.set.toString();\n\t}\n}\n"]}