{"version":3,"file":"ConsoleErrorListener.js","sourceRoot":"","sources":["../../src/ConsoleErrorListener.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAQH;;;GAGG;AACH,MAAM,OAAO,oBAAoB;IAChC;;OAEG;IACI,MAAM,CAAU,QAAQ,GAAyB,IAAI,oBAAoB,EAAE,CAAC;IAEnF;;;;;;;;;;OAUG;IACI,WAAW,CACjB,UAA8B,EAC9B,eAAkB,EAClB,IAAY,EACZ,kBAA0B,EAC1B,GAAW,EACX,CAAmC;QACnC,OAAO,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,kBAAkB,IAAI,GAAG,EAAE,CAAC,CAAC;IAC5D,CAAC","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:50.5479602-07:00\n\nimport { ANTLRErrorListener } from \"./ANTLRErrorListener.js\"\nimport { RecognitionException } from \"./RecognitionException.js\"\nimport { Recognizer } from \"./Recognizer.js\"\n\n/**\n *\n * @author Sam Harwell\n */\nexport class ConsoleErrorListener implements ANTLRErrorListener<any> {\n\t/**\n\t * Provides a default instance of {@link ConsoleErrorListener}.\n\t */\n\tpublic static readonly INSTANCE: ConsoleErrorListener = new ConsoleErrorListener();\n\n\t/**\n\t * {@inheritDoc}\n\t *\n\t * This implementation prints messages to {@link System#err} containing the\n\t * values of `line`, `charPositionInLine`, and `msg` using\n\t * the following format.\n\t *\n\t * <pre>\n\t * line *line*:*charPositionInLine* *msg*\n\t * </pre>\n\t */\n\tpublic syntaxError<T>(\n\t\trecognizer: Recognizer<T, any>,\n\t\toffendingSymbol: T,\n\t\tline: number,\n\t\tcharPositionInLine: number,\n\t\tmsg: string,\n\t\te: RecognitionException | undefined): void {\n\t\tconsole.error(`line ${line}:${charPositionInLine} ${msg}`);\n\t}\n}\n"]}