{"version":3,"file":"RuleStartState.js","sourceRoot":"","sources":["../../../src/atn/RuleStartState.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;AAEH,wDAAwD;AAExD,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAA;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAA;AAG3C,MAAM,OAAO,cAAe,SAAQ,QAAQ;IAC3C,gDAAgD;IACzC,SAAS,CAAiB;IAC1B,gBAAgB,GAAY,KAAK,CAAC;IAClC,YAAY,GAAY,KAAK,CAAC;IAGrC,IAAI,SAAS;QACZ,OAAO,YAAY,CAAC,UAAU,CAAC;IAChC,CAAC;CACD;AAHA;IADC,QAAQ;+CAGR","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:36.6806851-07:00\n\nimport { ATNState } from \"./ATNState.js\"\nimport { ATNStateType } from \"./ATNStateType.js\"\nimport { Override } from \"../Decorators.js\"\nimport { RuleStopState } from \"./RuleStopState.js\"\n\nexport class RuleStartState extends ATNState {\n\t// This is always set during ATN deserialization\n\tpublic stopState!: RuleStopState;\n\tpublic isPrecedenceRule: boolean = false;\n\tpublic leftFactored: boolean = false;\n\n\t@Override\n\tget stateType(): ATNStateType {\n\t\treturn ATNStateType.RULE_START;\n\t}\n}\n"]}