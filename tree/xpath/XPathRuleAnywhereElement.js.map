{"version":3,"file":"XPathRuleAnywhereElement.js","sourceRoot":"","sources":["../../../../src/tree/xpath/XPathRuleAnywhereElement.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;AAIH,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAA;AAE9C,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAEhD;;GAEG;AACH,MAAM,OAAO,wBAAyB,SAAQ,YAAY;IAC/C,SAAS,CAAS;IAC5B,YAAY,QAAgB,EAAE,SAAiB;QAC9C,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;IAGM,QAAQ,CAAC,CAAY;QAC3B,OAAO,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;CACD;AAHA;IADC,QAAQ;wDAGR","sourcesContent":["/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// CONVERSTION complete, Burt Harris 10/14/2016\nimport { ParserRuleContext } from \"../../ParserRuleContext.js\"\nimport { Override } from \"../../Decorators.js\"\nimport { ParseTree } from \"../ParseTree.js\"\nimport { Trees } from \"../Trees.js\"\nimport { XPathElement } from \"./XPathElement.js\"\n\n/**\n * Either `ID` at start of path or `...//ID` in middle of path.\n */\nexport class XPathRuleAnywhereElement extends XPathElement {\n\tprotected ruleIndex: number;\n\tconstructor(ruleName: string, ruleIndex: number) {\n\t\tsuper(ruleName);\n\t\tthis.ruleIndex = ruleIndex;\n\t}\n\n\t@Override\n\tpublic evaluate(t: ParseTree): ParseTree[] {\n\t\treturn Trees.findAllRuleNodes(t, this.ruleIndex);\n\t}\n}\n"]}